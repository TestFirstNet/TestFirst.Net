#!/bin/bash

VERBOSITY=normal
#VERBOSITY=detailed
CONFIG=Release
#CONFIG=Debug

VERSION=0.0.0
LOCAL_REPO=~/workspace/local-nuget-repo
TMP_DIR=obj/tmp
PROJECTS="TestFirst.Net TestFirst.Net.Extensions TestFirst.Net.Performance"

function log(){
    echo "[BUILD] $1"
}

function filterHtml(){
    in="$1"
    cat $in | sed -e 's/</\&#8249;/g' -e 's/>/\&#8250;/g'
}

function filterTemplate(){
    from=$1
    to=$2 
    
    log "filtering template $from to $to"
    mkdir -p $TMP_DIR

    cp -f "$from" "$to"
    filterHtml "../README.md" > "$TMP_DIR/README.md.clean"
    filterHtml "../RELEASENOTES.txt" > "$TMP_DIR/RELEASENOTES.txt.clean"

    sed -i -e "/TOKEN_MAIN_DESCRIPTON/{r $TMP_DIR/README.md.clean" -e 'd}' $to
    sed -i -e "/TOKEN_MAIN_RELEASENOTES/{r $TMP_DIR/RELEASENOTES.txt.clean" -e 'd}' $to
    
    rm -f "$TMP_DIR/README.md.clean"
    rm -f "$TMP_DIR/RELEASENOTES.txt"
    
    rm -fR $TMP_DIR
}

function nupack(){
    projName="$1"

    log "packing $projName"
    pushd "$projName"

        #main package
        log "building main nuget package"
        filterTemplate ${projName}.nuspec.template ${projName}.nuspec
        nuget pack ${projName}.nuspec  -Prop Configuration=$CONFIG -Version $VERSION    
        rm -f ${projName}.nuspec

        log "building symbols nuget package"
        #symbols package
        filterTemplate ${projName}.nuspec.template ${projName}.nuspec
        nuget pack ${projName}.nuspec  -Symbols -Prop Configuration=$CONFIG -Version $VERSION 
        #rm -f ${projName}.nuspec

        #todo: gitlink
    popd
}

function cleanLocalRepo(){
    rm -f $LOCAL_REPO/*.nupkg
}

function packAll(){ 
    log "packing all"
    for proj in $PROJECTS; do
        nupack $proj
    done
}

function nuPush(){
    proj=$1
    pkg="$proj.nupkg"
    log "pushing nuget pkg $pkg"
    pushd $proj
        nuget Push $pkg    
    popd
}

function nuPushAll(){
    for proj in $PROJECTS; do
        nuPush $proj
    done
}

function removeOldNuPkgs(){
    find . -name \*.nupkg | xargs -i rm {}
}

function copyNuPkgsToLocalRepo(){
    log "copying packages to local test repo $LOCAL_REPO"
    mkdir -p $LOCAL_REPO
    find . -name \*.nupkg | xargs -i cp {} --target $LOCAL_REPO

    log "packages in local repo are:"
    ls -l $LOCAL_REPO
}

# ------------- build targets ---------------

function tagGit(){
    log "tagging git"
    while true; do
        read -p "tag git with version v$VERSION? yn :" yn
        case $yn in
            [Yy]* ) 
			    git tag -a v$VERSION -m "Release version $VERSION"; 
			    log "tagged with v$VERSION"
			    break;;
            [Nn]* )
			    log "not tagging"
			    break;;
            * ) echo "Please answer y or n.";;
        esac
    done
}

function cleanAll(){
    log "clean all"
    removeOldNuPkgs
    xbuild TestFirst.Net.sln /t:Clean 
    xbuild TestFirst.Net.sln /t:Clean  /p:Configuration=$CONFIG
    find . -name *.nuspec | xargs -i rm {}
}

function buildAll(){
    log "building all"
    # TODO:detect mono and use xbuild (if in cygwin env)
    #msbuild.exe TestFirst.Net.sln -t:Clean,Build -p:Configuration=Release
    xbuild TestFirst.Net.sln /t:Build /p:Configuration=$CONFIG /verbosity:$VERBOSITY
}

function testAll(){
    log "TODO! Test not yst implemented"
}

function buildRelease(){
    read -p "Build as nuget version: " VERSION

    removeOldNuPkgs
    cleanAll
    buildAll
    testAll
    packAll
    copyNuPkgsToLocalRepo
}

function release(){
    log "This will build and package TestFirst.Net and then tag git"
    log "This will place a copy of the built packages into $LOCAL_REPO for testing"

    buildRelease
    tagGit
}

function printHelp() {
    log "targets:"
    log "  clean : remove all built artifacts (*.dll)"
    log "  clean-repo : remove all *.nupkg files from local repo $LOCAL_REPO"
    log "  clean-all : clean,clean-repo"
    log "  build : build the solution using msbuild/xbuild"
    log "  test : run the unit tests"
    log "  pack : pack the built artifacts into nuget packages"
    log "  release-build : clean, build, test, pack"
    log "  release-push : push all the nuget packages to the nuget repo"
    log "  release : release-build,git-tag"
}

log "-------- TestFirst.Net Build -----"
    
for target in "$@"; do    
    log "executing target '$target'"

    case $target in
        'clean' )
            cleanAll
            ;;
        'clean-repo' )
            cleanLocalRepo
            ;;
        'clean-all' )
            cleanLocalRepo
            cleanAll
            ;;
        'build' )
            buildAll
            ;;
        'test' )
            testAll
            ;;
        'pack' )
            packAll
            ;; 
        'release-push' )
            nuPushAll
            ;; 
        'release-build' )
            releaseBuild
            ;;
        'release' )
            release
            ;;
        'help' )
            printHelp
            ;;             
        * ) 
            echo "No build target '$target'. For help run target '$0 help'";
            exit -1
    esac
done
